{"config":{"lang":["en","ja"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"deck-mining/","title":"Home","text":"<p>Still a draft.</p>"},{"location":"deck-mining/#introduction","title":"Introduction","text":"<p>The bulk of this guide will be what I tried on default SteamOS. If you're planning to go the Windows route, the tips and controller section of the guide might still be helpful.</p> <p>If you are planning on playing a lot of VN's that is not Steam Deck certified or native Linux, and you don't have the patience to fiddle with settings to get those VN's working right, you might want to consider using Windows. Check out dual-booting Windows, or using a virtual machine in SteamOS desktop mode. See Running Windows on the Steam Deck for more info.</p>"},{"location":"deck-mining/#typical-lookup-and-mining-workflow","title":"Typical lookup and mining workflow","text":"<p>Browser texthook page, Yomichan, Anki</p>"},{"location":"deck-mining/#deck-specific-tweaks","title":"Deck-specific tweaks","text":"<p>TODO: zoom levels, etc</p>"},{"location":"deck-mining/OCR/","title":"OCR","text":"<p>:heavy_exclamation_mark: CURRENTLY DOES NOT WORK. Steps below are for reference only of what I've tried. manga_ocr currently does not work due to missing xclip or wl-paste. It used to work but looks like some SteamOS update broke it. Also I'm having trouble installing owocr in a Python venv, but I need venv to install OCR services like Google Lens or EasyOCR, so I'm currently stuck.</p> Just for my reference, does not work  I'll be going through [OwOcr](https://github.com/AuroraWright/owocr) here. If you're comfortable with installing software through pacman, you can also check out YomiNinja.  ## Install OwOcr 1. Create a Python virtual env (need this for manga_ocr on the Steam Deck, or it'll complain about externally managed environment and possibility of breaking the OS if you try to override it). Open Konsole and type or paste in following: <pre><code>python3 -m venv ocr\nsource ocr/bin/activate\n</code></pre> 2. install pip  <pre><code>python -m ensurepip --upgrade\n</code></pre> This will install pip into ~/.local/bin. We need to add this to PATH as well.    3. edit `~/.bashrc` in something like `Kate` or `vim`, add this to the end of the file: <pre><code>if [ -d \"$HOME/.local/bin\" ]; then\n  PATH=\"$HOME/.local/bin:$PATH\"\nfi\n</code></pre> 4. Test it's working: <pre><code>~/.local/bin/pip -V\n</code></pre> 5. Now we can install owocr: <pre><code>pip install owocr\n</code></pre> 6. And install manga_ocr: <pre><code>pip install manga_ocr\n</code></pre> Reference: (https://www.reddit.com/r/SteamDeck/comments/x4ct1r/how_do_i_do_a_pip3_install/)  ## Using OwOcr `To be added`  <p>Note: I did not manage to try it, but it may be possible to install python and the ocr tools properly through podman and/or distrobox without having to unlock the Deck and use pac-man. If you manage to get it working, feel free to share!</p>"},{"location":"deck-mining/acknowledgements/","title":"Acknowledgements","text":"<p>I would like to thank the following people who made this guide possible: - Xelieu who made the lazy guide which I based my Yomitan and mining setup on. Also thanks for introducing me to mkdocs and having the lazy guide page source code available for reference. - xythh who I got the code to add screenshot and audio to Anki on Linux, I only needed to make minor edits to make them work on the Deck. - Nerdnest (on YouTube) who made really good controller mapping tutorials and which I hope to learn and use more in the future. - Visual Novel Wiki for the resources on getting VNs to work on Linux. - TheMoeWay community, from which I first learnt about most of the tools involved and also gave some help when I had technical questions.</p> <p>And you, dear reader who've made it to this page, thank you. I hope there's been something useful in here for you, and feel free to reach out if you'd like to contribute to the guide or share your experiences on Japanese learning with the Steam Deck.</p>"},{"location":"deck-mining/acknowledgements/#contact","title":"Contact","text":"<p>I can be reached as <code>aka_baka</code> on discord, or you can create pull requests for this repo.</p> <p>Thank you!</p>"},{"location":"deck-mining/beforePlaying/","title":"Getting Things Ready Before Playing","text":"<p>Things you will want to launch every time you want to do immersion learning gaming: 1. Make sure your desktop controller mappings support Alt-Tab, and optionally hotkeys to save cards, screenshots and audio to Anki. (only need to do this once. See the section on controller mapping for more details.) 2. Browser and texthook page. Make sure Yomitan is enabled 3. Anki (if you're mining, or using offline audio with it)</p> <p>I personally just launch everything manually myself, but you could write a short bash script to start them all if you want. </p> <p>It's time to then launch the game and hook it. Follow the relevant parts in the following sections, you'll only need to do one type of hooking for a game.</p>"},{"location":"deck-mining/controller/","title":"Controller config","text":"<p>Please learn how to change the controller config of games in Steam separately, I won't be covering that in this guide.</p>"},{"location":"deck-mining/controller/#desktop-vs-game-config","title":"Desktop vs game config","text":"<p>Game configs are per-game, and are active when the game is in focus. \\ Desktop config is active when the game is not in focus.</p> <p>As such, you'll want to ensure Alt+Tab is mapped for both configs, otherwise you may be able to tab away from the game but not back, or vice-versa.</p>"},{"location":"deck-mining/controller/#tips","title":"Tips","text":"<p>For some reason left Alt+Tab doesn't work for me to tab away from game. But Right Alt+Tab does.\\ Personally I map Right Alt to L4, and Tab to R4. This way, I can keep holding Alt while tabbing a few times to swap between multiple windows, instead of just toggling between the 2 most recent.</p> <p>If you're using SteamTinkerLaunch, you'll want to ensure something (I suggest touchpad) is mapped to mouse movement and click in the game config so that you can click on the menu.</p> <p>Steam + x will bring up the on-screen keyboard.</p> <p>For VNs, you'll likely want to map these actions if it's not already in your config: - replay audio - bring up backlog - quick save, quick load</p>"},{"location":"deck-mining/controller/#templates","title":"Templates","text":"<p>(WIP) It should be possible to save a config as a template to make it easier to set up for other games, but I have not done this yet.</p>"},{"location":"deck-mining/controller/#advanced-mappings","title":"Advanced mappings","text":"<p>Examples of more fancy things you can do: - set up different layers so the same button does different things when another button or the touchpad is pressed. - create radial menus with the touchpad or stick - create button menus with the touchpad</p> <p>These are useful if the game you're playing is already using the majority of buttons and you want to map more actions for Anki mining.</p> <p>You can learn more from video tutorials, eg. NerdNest's excellent one on action layers.</p>"},{"location":"deck-mining/demos/","title":"Demos","text":""},{"location":"deck-mining/demos/#yakuza-0-steamtinkerlaunch-windows-agent","title":"Yakuza 0 + SteamTinkerLaunch + Windows Agent","text":""},{"location":"deck-mining/demos/#clannad-yuzu-linux-agent","title":"Clannad + Yuzu + Linux Agent","text":""},{"location":"deck-mining/demos/#tsuyuchiru-lutris-textractor","title":"Tsuyuchiru + Lutris + Textractor","text":""},{"location":"deck-mining/demos/#zero-time-dilemma-owocr-planned","title":"Zero Time Dilemma + owocr (planned)","text":""},{"location":"deck-mining/demos/#mining-to-anki","title":"Mining to Anki","text":""},{"location":"deck-mining/demos/#bonus-yomininja-on-windows-planned","title":"Bonus: YomiNinja on Windows (planned)","text":""},{"location":"deck-mining/demos/#trails-of-cold-steel-agent-on-windows","title":"Trails of Cold Steel + Agent on Windows","text":""},{"location":"deck-mining/hookEmuDeck/","title":"Hooking Linux Games or Emulators","text":"<p>This is the most straightforward. Just launch your game, then launch Textractor or Agent yourself. For emulators, I've only tested Yuzu. Linux version of Agent works with it. I have not tried other emulators, not sure if Agent or Textractor would be able to work with them. (If you've tried, let me know your experience!)</p>"},{"location":"deck-mining/hookLutrisGames/","title":"Hooking Lutris or Other Proton Launcher Games","text":"<p>I assume you're familiar with how to get visual novels running using Lutris or Bottles. I personally refer to Visual Novel wiki. If you're unfamiliar with wine/proton, a very simple (and not very accurate, but good enough for our usage) way to think of it is having mini virtual Windows PC on every \"wine/proton prefix\". So the challenge is to ensure Textractor or Agent will launch in the same prefix (mini virtual Windows PC), or it won't be able to find your game. As long as you have a working prefix for your game, you can use the same prefix to launch Textractor or Agent, and everything else will work the same like hooking a Steam game.</p> <p>Note: unfortunately the VN wiki is bugging out and not displaying images as of the time of this writing, so you might want to check archived pages at the Internet Wayback Machine instead.</p>"},{"location":"deck-mining/hookSteamGames/","title":"Hooking Steam Games","text":"<p>How to hook Steam games (or games you've added shortcut to Steam and launching with Steam). We'll be using SteamTinkerLaunch to fork Textractor/Agent when the game starts.  1. download SteamTinkerLaunch 2. follow the instructions at SteamTinkerLaunch page to use it with your game, either as a Compatibility Tool (if the game is not native Linux and is running on Proton), or as a Launch Option (if the game is native Linux). 3. this page has a demo of adding as a compatibility tool 4. launch your game. By default the SteamTinkerLaunch menu will display for 2 seconds. Click on <code>MAIN MENU</code> before it disappears.    (tip: the controller mapping for your game will be used, so you might find pressing the right trigger doesn't do a mouse click. You can use the touch screen instead, or else map something to left click in your game controller mappings.) The time this menu displays can be customized in SteamTinkerLaunch settings. 5. Click on <code>GAME MENU</code>.  7. In the game menu, tick <code>Fork custom command</code>, and click on the box beside <code>Custom command</code>. Select the program you need (Textractor or Agent) from where you saved them.  9. click on <code>SAVE AND PLAY</code>. Your game will launch together with the the program you put in #5. 10. hook the game with Textractor or Agent. (you may want to customize your game mappings so you can use trackpad as mouse and click. Especially for Agent where you'll need to drag &amp; drop the crosshair.) 11. play the game, and Alt-Tab to the texthook page when you want to look up words, then Alt-Tab back. Enjoy! 12. optional: once you're sure you won't want to change anything in SteamTinkerLaunch for that game, you can disable the display before the game launches.</p> <p>Note: SteamTinkerLaunch will always try to update itself before launching, so it'll take a bit more time to launch your games.</p>"},{"location":"deck-mining/mining/","title":"Mining","text":""},{"location":"deck-mining/mining/#how-to-save-screenshots-to-anki","title":"How to save screenshots to Anki","text":"<p>Save this shell script to your Deck, keep it somewhere you'll remember.  Calling this script will capture the active window and save it to the latest Anki note, and display a notification (depending on your notification settings, you may not see it when in-game). With thanks to Xythh whom I got the code snippet from and just made minor edits to work on the Deck.</p> ss_window.sh <pre><code>#!/bin/sh\n\n### capture screnshot with spectacle\n#ss_dir=\"/home/deck/Pictures/Screenshots/for_anki\"\ntime=$(date +%Y-%m-%d-%H-%M-%S)\n#tmp_file=${ss_dir}/${time}\ntmp_file=\"/home/deck/.var/app/net.ankiweb.Anki/$time\"\nspectacle --background --activewindow --nonotify --output $tmp_file.jpg\n\n### import to anki. Code taken from https://gist.github.com/xythh/96796571baa850783a0b49f4d325e5b2 with minor edits\nankiConnectPort=\"8765\"\npictureField=\"Picture\"\n\n# This gets your notes marked as new and returns the newest one.\nnewestNoteId=$(curl -s localhost:$ankiConnectPort -X POST -d '{\"action\": \"findNotes\", \"version\": 6, \"params\": { \"query\": \"is:new\"}}' | jq '.result[-1]')\n\n# if anki connect is running it will return your latest note id, and the following code will run, if anki connect is not running a notification pops up.\nif [ \"$newestNoteId\" != \"\" ]; then\n    curl -s localhost:$ankiConnectPort -X POST -d '{\n        \"action\": \"updateNoteFields\",\n        \"version\": 6,\n        \"params\": {\n            \"note\": {\n                \"id\": '\"$newestNoteId\"',\n                \"fields\": {\n                    \"'$pictureField'\": \"\"\n                },\n                \"picture\": [{\n                    \"path\": \"'\"$tmp_file\"'.jpg\",\n                    \"filename\": \"paste-'\"$time\"'.jpg\",\n                    \"fields\": [\n                        \"'$pictureField'\"\n                    ]\n                }]\n            }\n        }\n    }'\n    notify-send \"Saving screenshot to Anki...\"\nelse\n    notify-send \"Ankiconnect is not running, unable to save screenshot to Anki card.\"\nfi\nrm \"$tmp_file.jpg\"\n</code></pre>"},{"location":"deck-mining/mining/#how-to-record-audio-to-anki","title":"How to record audio to Anki","text":"<p>Save this shell script to your Deck, keep it somewhere you'll remember.  Calling this script will start recording audio, calling it again will stop recording and save the audio clip to the latest Anki note. Likewise, with thanks to Xythh for 99% of the code.</p> record_audio.sh <pre><code>#!/bin/sh\n\n# Version 1.2\n# script taken from https://gist.github.com/xythh/aab65a301a001ef6107cd54a360d4453 with minor edits\n# shoutout to https://gist.github.com/Cephian/f849e326e3522be9a4386b60b85f2f23 for the original script,\n# https://github.com/xythh/ added the ankiConnect functionality\n# # toggle record computer audio (run once to start, run again to stop)\n# # dependencies: ffmpeg, pulseaudio, curl\n# # for Steam deck: use python (or perl) instead of bc (since bc is not installed by default)\n#\n# # where recording gets saved, gets deleted after being imported to anki\nDIRECTORY=\"/home/deck/.var/app/net.ankiweb.Anki/\"\nFORMAT=\"mp3\" # ogg or mp3\n# cut file since it glitches a bit at the end sometimes\n#CUT_DURATION=\"0.1\"\nCUT_DURATION=\"0\"\n#port used by ankiconnect\nankiConnectPort=\"8765\"\n# gets the newest created card, so make sure to create the card first with yomichan\nnewestNoteId=$(curl -s localhost:$ankiConnectPort -X POST -d '{\"action\": \"findNotes\", \"version\": 6, \"params\": { \"query\": \"is:new\"}}' | jq '.result[-1]')\n#Audio field name\naudioFieldName=\"SentenceAudio\"\n\n#if there is no newest note, you either have a complete empty anki or ankiconnect isn't running\nif [ \"$newestNoteId\" =  \"\" ]; then\n  notify-send \"anki connect not found\"\n  exit 1\nfi\n\nif pgrep -f \"parec\"; then\n  pkill -f \"parec\"\nelse\n  time=$(date +%s)\n  name=\"$DIRECTORY/$time\"\n  wav_file=\"$name.wav\"\n  out_file=\"$name.$FORMAT\"\n\n  if ! [ -d \"$DIRECTORY\" ]; then\n      mkdir \"$DIRECTORY\"\n  fi\n  notify-send -t 1000 \"Audio recording started\"\n  #timeout 1m arecord -t wav -f cd \"$wav_file\"\n\n  # just grabs last running source... may not always work if your pulseaudio setup is complicated\n  if ! timeout 1m parec -d\"$(pactl list sinks | grep -B1 'State: RUNNING' | sed -nE 's/Sink #(.*)/\\1/p' | tail -n 1)\" --file-format=wav \"$wav_file\";\n  then\n\n      notify-send \"Error recording \" \"most likely no audio playing\"\n      rm \"$wav_file\"\n      exit 1\n  fi\n\n  input_duration=$(ffprobe -v error -select_streams a:0 -show_entries stream=duration -of default=noprint_wrappers=1:nokey=1 \"$wav_file\")\n#     output_duration=$(echo \"$input_duration\"-\"$CUT_DURATION\" | bc)\n  output_duration=`python -c \"print($input_duration-$CUT_DURATION)\"`\n\n  # encode file and delete OG\n  if [ $FORMAT = \"ogg\" ]; then\n      ffmpeg -i \"$wav_file\" -vn -codec:a libvorbis -b:a 64k -t \"$output_duration\" \"$out_file\"\n  elif [ $FORMAT = \"mp3\" ]; then\n      ffmpeg -i \"$wav_file\" -vn -codec:a libmp3lame -qscale:a 1 -t \"$output_duration\" \"$out_file\"\n  else\n      notify-send \"Record Error\" \"Unknown format $FORMAT\"\n  fi\n  rm \"$wav_file\"\n\n# Update newest note with recorded audio\ncurl -s localhost:$ankiConnectPort -X POST -d '{\n    \"action\": \"updateNoteFields\",\n    \"version\": 6,\n    \"params\": {\n        \"note\": {\n            \"id\": '\"$newestNoteId\"',\n      \"fields\": {\n                \"'$audioFieldName'\": \"\"\n            },\n            \"audio\": [{\n                \"path\": \"'\"$out_file\"'\",\n                \"filename\": \"'\"$time\"'.'$FORMAT'\",\n                \"fields\": [\n                    \"'$audioFieldName'\"\n                ]\n            }]\n        }\n    }\n}'\n# opens changed note, comment if you don't want it.\n# curl -s localhost:$ankiConnectPort -X POST -d '{\n#     \"action\": \"guiBrowse\",\n#     \"version\": 6,\n#     \"params\": {\n#         \"query\": \"nid:'\"$newestNoteId\"'\"\n#     }\n# }'\n  notify-send -t 1000 \"Audio recording copied\"\n  rm \"$out_file\"\nfi\n</code></pre>"},{"location":"deck-mining/mining/#adding-keyboard-shortcuts-to-call-the-screenshot-and-record-audio-scripts","title":"Adding keyboard shortcuts to call the screenshot and record audio scripts","text":"<ol> <li>Open the keyboard shortcut settings from the start menu. (easiest way is to type to find it)    </li> <li>Click on <code>Custom Shortcuts</code> on the left.</li> <li>Click <code>Edit</code>-&gt; <code>New</code>-&gt; <code>Global Shortcut</code> -&gt; <code>Command/URL</code></li> <li>Rename it, eg. to \"Anki screenshot\"</li> <li>Edit the trigger to a shortcut key combo (you'll need to map this to a controller button later). I use Alt+Shift+C for screenshot and Alt+Shift+A for audio recording, but this is totally up to you, just pick something unlikely to clash with anything else in-game or with other software. </li> <li>Edit the action to the screenshot script you saved earlier. Put the path of the script in. (Reminder: if you move the file, you'll have to edit this shortcut.) </li> <li>Repeat steps #3-6 for the script to record audio.</li> </ol>"},{"location":"deck-mining/mining/#mapping-the-shortcuts-and-other-actions-to-controller-buttons","title":"Mapping the shortcuts and other actions to controller buttons","text":"<p>You'll want to map controller buttons to actions we need when mining.  If you're launching the game through Steam, you'll need to set up both the desktop and also game-specific configs, as the latter will apply when the game is in focus.</p> <p>Desktop controller config: - Alt + tab - mine word (Alt+E) - replay Yomichan audio</p> <p>Game controller config - you'll need to do this for every game. Map the shortcut triggers you set up earlier: - save screenshot to card  - start/stop recording audio and save to card</p>"},{"location":"deck-mining/resources/","title":"(coming soon)","text":""},{"location":"deck-mining/runWin/","title":"Running Windows on the Steam Deck","text":"<p>For when something really cannot work in Linux, or you're lazy to fiddle around with Lutris/Bottle/proton settings to get a VN working. Or if a texthook only seems to work in Windows (Trails of Cold Steel Agent hook, for example). </p> <p>There are a few options: 1. in SteamOS, run Windows as a virtual machine (using Boxes for example) 2. dual-boot Windows from a SD card. Recommended if you're testing only and not for long-term use, as there's a high likelihood the SD card will fail earlier. Also the performance is going to be bad for games in general. 3. dual-boot Windows from the internal SSD (or an external SSD). This is the option I recommend. Follow this guide: Bald Sealion's Steam Deck Ultimate Windows Guide</p>"},{"location":"deck-mining/runWin/#tools-on-windows","title":"Tools on Windows","text":"<p>There are some tools I did not recommend in the main guide as the installation is a pain in Linux. If you're using Windows, you can consider using these tools: 1. YomiNinja for OCR 2. JL as an alternative to texthook pages. This overlays the text directly on top of the game window. Limitation: it supports mining to Anki, but not handlebars so you might not be able to use fancy Anki card templates that you use with Yomitan on a browser. 3. ShareX is an essential tool, you can get screenshots and record audio easily.</p>"},{"location":"deck-mining/setupIntro/","title":"Setup Introduction","text":"<p>Unless otherwise specified, all the setup and usage will be in desktop mode. To make things simple, I'll stick to using either flatpaks from the Discover app, or software that are easily installed with scripts.</p> <p>There are a few components to the gaming immersion flow:</p> <ol> <li>the game itself (obviously)</li> <li>a tool to extract text from the game as you play (Textractor/Agent/OCR tools etc)</li> <li>something to display the extracted text (typically in a browser)</li> <li>something to look up the vocab in a dictionary (or a few of them at once)</li> <li>(optional) mine to Anki (including saving screenshots and audio) for revision study later</li> </ol>"},{"location":"deck-mining/setupIntro/#starting-setup","title":"Starting setup","text":"<p>If you're in gaming mode, switch over to desktop mode. (Press the \"Steam\" button -&gt; power -&gt; switch to desktop mode)</p> <p>Follow the steps in the next sections. Basic tools are a must; for the rest, you can pick only the ones you use. If you're not planning on mining to Anki, you can follow the steps to extract text/OCR and ignore the parts about Anki and Ankiconnect.</p>"},{"location":"deck-mining/setupTools/","title":"Tools","text":""},{"location":"deck-mining/setupTools/#to-extract-text-as-you-play-the-game","title":"To extract text as you play the game","text":"<p>If you know what the game needs, you can just get that. Or grab them all to be well-prepared for a variety of games.</p>"},{"location":"deck-mining/setupTools/#textractor","title":"Textractor","text":"<p>Download Textractor here. You can also get the latest unofficial alpha build from this thread that has updates and should support more games. Unzip and keep it in a folder you remember. We'll need this path later.  </p>"},{"location":"deck-mining/setupTools/#agent","title":"Agent","text":"<p>Download Agent here. Get both the Windows and Linux versions. Unzip them and keep them in a folder you remember, we'll need the paths later. I personally don't use their OCR server, but other OCR tools below.</p>"},{"location":"deck-mining/setupTools/#ocr-have-not-personally-tried","title":"OCR - have not personally tried","text":"<p>Some options:</p> <ul> <li> <p>owocr</p> </li> <li> <p>YomiNinja - for advanced Linux users (you need to know what you're doing with pacman). This tool is still fast-evolving and currently installation on SteamOS (Linux) is still a bit more complicated (and there's a risk of breaking SteamOS with conflicting dependencies). You can follow news updates on their Patreon to get a sneak peek of the upcoming features.</p> </li> </ul> <p>I personally haven't installed YomiNinja on SteamOS, so no guarantees or help there.  </p>"},{"location":"deck-mining/setupTools/#to-display-and-look-up-text","title":"To display and look up text","text":""},{"location":"deck-mining/setupTools/#a-browser-that-supports-yomitan-extension-eg-firefox-chrome-chromium-browsers","title":"A browser that supports Yomitan extension (eg. Firefox, Chrome, Chromium browsers)","text":"<p>I installed flatpaks through the Discover store.</p>"},{"location":"deck-mining/setupTools/#yomitan-extension","title":"Yomitan extension","text":"<p>Download the extension from your respective browser store, and refer to the Yomitan main page for instructions on migrating from Yomichan/setting up etc. If you already have a working Yomichan/Yomitan setup on another device, you can export the dictionaries and settings, and import on the Steam Deck. If you're starting from scratch and want a quick setup, you can consider using Xelieu's Lazy Guide (I highly recommend this guide as a whole as well.)</p>"},{"location":"deck-mining/setupTools/#a-browser-texthook-page","title":"A browser texthook page","text":"<p>Pick one you like. I recommend pages that use websocket instead of relying on clipboard inserter (old and inferior method):  </p> <ul> <li> <p>exSTATic has historical stats visualization in addition to the texthook page. Remember to install the TextractorSender dll as well as listed in the instructions.</p> </li> <li> <p>Renji-XD's texthooker-ui page. Also install a websocket hook (eg. textractor-websocket or TextractorSender).</p> </li> </ul>"},{"location":"deck-mining/setupTools/#to-mine-vocab-to-anki","title":"To mine vocab to Anki","text":""},{"location":"deck-mining/setupTools/#anki","title":"Anki","text":"<p>Install Anki from Discover store.</p>"},{"location":"deck-mining/setupTools/#anki-addons","title":"Anki addons","text":"<p>Install Ankiconnect. You'll need this to add Anki cards from Yomitan.</p>"},{"location":"deck-mining/setupTools/#mining-with-yomitan","title":"Mining with Yomitan","text":"<p>Make sure your Yomitan settings are correct and it's able to see the Anki deck you'll add cards to, all fields are correct, etc.</p>"},{"location":"deck-mining/setupTools/#optional-offline-and-more-audio-sources-for-yomitan","title":"Optional: offline and more audio sources for Yomitan","text":"<p>Follow the guide here to enable offline and more audio sources for Yomitan. Note: by default, this uses Anki to run, but you can also host it locally using Python 3.9 or above. Also, this will take up ~2.5 to 5GB of disk space depending on the audio format you choose, please ensure you have enough space.</p>"},{"location":"deck-mining/tips/","title":"Tips","text":""},{"location":"deck-mining/tips/#misc-tips","title":"Misc tips","text":"<ul> <li>Adjust zoom factor of Yomitan and your texthook page. I like to use between 125 - 150%.</li> <li>There are times (especially when setting up) where it'll be much easier if you have a keyboard and mouse. A few options:</li> <li>Use bluetooth kb+m</li> <li>Get a usb-c dock and connect your kb+m</li> <li>Remote desktop (either through Steam remote play or other software)</li> <li>window mode for games are more stable than fullscreen since we have to alt+tab often. Use frameless window option if the game supports it.</li> <li>back buttons are good candidates to map for our window switching, OCR, and mining actions</li> <li>map single click and moving the cursor to separate trackpads for easier click and drag (if you're attempting OCR where you have to drag a region)</li> <li>you can map double click by using extra command of type \"start press\" and put a delay</li> <li>disable mouse in the game if supported to avoid camera moving around or accidentally advancing text when grabbing a screenshot for OCR. Eg. Senpatcher for Sen no Kiseki can disable mouse in-game</li> </ul>"},{"location":"deck-mining/tips/#transferring-files","title":"Transferring files","text":"<p>Options: - SFTP (eg, WinSCP or FileZilla on Windows) - recommended as it was the easiest for me. - KDE Connect (only for small files, it fails for files larger than a couple of GB for me) - Warpinator (failed a few times on me) Others I know of but didn't use: - Syncthing - sshfs - deckMTP - cloud services (eg, Google Drive, Dropbox, etc) - USB drives or SD cards (note: some filesystem formats may not be recognized by Linux, or Windows)</p>"}]}